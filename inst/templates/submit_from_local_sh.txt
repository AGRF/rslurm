#!/bin/bash
#
#SBATCH --array=0-{{{max_node}}}
#SBATCH --job-name={{{jobname}}}
#SBATCH --output=/dev/null
{{#flags}}
#SBATCH --{{{name}}}
{{/flags}}
{{#options}}
#SBATCH --{{{name}}}={{{value}}}
{{/options}}

# Load the associated singularity R module
module load simg_R/{{{r_version}}}

# Create a tmp directory
rslurm_temp_dir=$(mktemp -d /tmp/rslurm_XXXXX)
rscript_temp_dir=$(mktemp -d /tmp/rscript_XXXXX)

trap "rm -rf ${rslurm_temp_dir} ${rscript_temp_dir}" EXIT

cd ${rslurm_temp_dir}

# Rsync across the required scripts and the packrat file.
# Remove folders that are not part of the script.
# Pump through srun to track timings
srun rsync --archive --include='*/' \
    --include='packrat/***' \
    --exclude='{{{tmp_dir}}}/results_*' \
    --include='{{{tmp_dir}}}/params.RDS' \
    --include='{{{tmp_dir}}}/f.RDS' \
    --include='{{{tmp_dir}}}/slurm_run.R' \
    --include='*.Rproj' \
    --include='.Rprofile' \
    --exclude='*' \
    --prune-empty-dirs \
 ${SLURM_SUBMIT_HOST}:{{{project_dir}}}/ $PWD/


# Set local vars
R_IMAGE=/data/Bioinfo/bioinfo-resources/apps/singularity/simg_R/3.6.1/image/simg_R_3.6.1.simg
CONTAINER_WORKDIR=/opt
CONTAINER_TMPDIR=/scratch


# Set the SLURM_ARRAY_TASK_ID variable to be exported to singularity
export SINGULARITYENV_SLURM_ARRAY_TASK_ID=${SLURM_ARRAY_TASK_ID}
export SINGULARITYENV_TMPDIR=${CONTAINER_TMPDIR}
export SINGULARITYENV_TEMP=${CONTAINER_TMPDIR}
export SINGULARITYENV_WORKDIR=${CONTAINER_WORKDIR}

# Run the rscript
# Pump through srun to track timings
srun --mpi=none \
    singularity run --contain --cleanenv --app Rscript \
        --bind ${rscript_temp_dir}:${CONTAINER_TMPDIR} \
        --bind $PWD:${CONTAINER_WORKDIR} \
        --bind /data:/data \
        --bind /Databases:/Databases \
        ${R_IMAGE} \
        ${WORK_ENV}/{{{tmp_dir}}}/slurm_run.R > $PWD/{{{tmp_dir}}}/slurm_${SLURM_ARRAY_TASK_ID}.out 2>&1

# Return the directory
# Pump through srun to track timings
srun rsync --archive \
    --include='*/' \
    --include='{{{tmp_dir}}}/***' \
    --exclude='*' \
    --prune-empty-dirs \
 $PWD/ ${SLURM_SUBMIT_HOST}:{{{project_dir}}}/

# Change to our previous directory
cd $OLDPWD

# Delete the tmp directory and exit
rm -rf ${rslurm_temp_dir} ${rscript_temp_dir}

# If the Rscript passed we want to return 0 else 1
rscript_task_id=1
STATE=$(sacct -j ${SLURM_ARRAY_JOB_ID}_${SLURM_ARRAY_TASK_ID}.${rscript_task_id} --noheader --format=State --parsable2)

if [[ "${STATE}" == "COMPLETED" ]]; then
    exit 0
elif [[ "${STATE}" == "FAILED" ]]; then
    exit 1
else
    echo "Unknown state ${STATE}" 1>&2
    exit 1
fi

